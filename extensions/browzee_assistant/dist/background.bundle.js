(()=>{var e={317:e=>{"use strict";e.exports=require("child_process")},896:e=>{"use strict";e.exports=require("fs")},928:e=>{"use strict";e.exports=require("path")}},r={};function n(o){var t=r[o];if(void 0!==t)return t.exports;var s=r[o]={exports:{}};return e[o](s,s.exports,n),s.exports}const{spawn:o}=n(317),t=n(928),s=n(896);let i=null;function c(){if(i)return void console.log("Server is already running");const e=t.join(__dirname,"server.js"),r=function(){const e=t.join(__dirname,".env");let r={};s.existsSync(e)&&s.readFileSync(e,"utf8").split("\n").forEach((e=>{const[n,o]=e.split("=");n&&o&&(r[n.trim()]=o.trim())}));const n={GEMINI_API_KEY:"AIzaSyA1jseZInDQvJOWAecLaLJWbApXxgv6mws",PORT:"8010",NODE_ENV:"production",...r},o=Object.entries(n).map((([e,r])=>`${e}=${r}`)).join("\n");return s.writeFileSync(e,o),n}();i=o("node",[e],{stdio:["ignore","pipe","pipe"],env:{...process.env,...r}}),i.stdout.on("data",(e=>{console.log(`Server: ${e}`)})),i.stderr.on("data",(e=>{console.error(`Server Error: ${e}`)})),i.on("close",(e=>{console.log(`Server process exited with code ${e}`),i=null})),console.log("Server started successfully")}chrome.runtime.onInstalled.addListener((()=>{c()})),chrome.runtime.onStartup.addListener((()=>{c()})),chrome.runtime.onSuspend.addListener((()=>{i&&(i.kill(),i=null,console.log("Server stopped"))})),chrome.runtime.onMessage.addListener(((e,r,n)=>{"CHECK_SERVER_STATUS"===e.type&&n({running:!!i})}))})();